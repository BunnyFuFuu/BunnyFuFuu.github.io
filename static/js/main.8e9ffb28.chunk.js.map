{"version":3,"sources":["constants.js","assets/pfp.jpg","assets/Resume.pdf","assets/AV.jpg","assets/bg.jpg","controller/controller.js","auth/privateroute.js","components/navbar.js","components/resbutton.js","routes/introduction.js","components/card.js","routes/profile.js","routes/experience.js","routes/projects.js","components/input.js","routes/manage.js","components/loginbutton.js","App.js","routes/login.js","serviceWorker.js","index.js"],"names":["module","exports","serverURL","hobbies","exp","token","projects","get","bind","create","update","delete","init","type","fetch","method","res","json","this","docs","console","log","emit","doc","headers","body","JSON","stringify","status","__raw","alert","EventEmitter","PrivateRoute","RouteComponent","component","rest","render","routeProps","controller","to","path","encodeURIComponent","NavBar","withStyles","root","height","borderRadius","padding","color","fontSize","margin","background","Button","props","checkScroll","event","setState","scrolled","window","pageYOffset","state","addEventListener","class","NavLink","exact","activeClassName","className","Component","ResButton","font","border","backdropFilter","transition","Introduction","src","PFP","variant","href","Resume","target","InfoCard","handleExpandClick","expanded","forceUpdate","image","progress","work","Card","CardHeader","title","subheader","date","CardMedia","CardContent","Typography","blurb","CardActions","IconButton","onClick","aria-expanded","aria-label","style","link","startIcon","Collapse","in","timeout","unmountOnExit","info","map","i","Profile","updateHobbies","Controller","then","Experience","updateExp","Projects","projs","loading","updateProjs","ASInput","onChange","value","id","Manage","arr","creating","editing","selected","onTypeChange","onSubmit","createButtonClicked","editingButtonClicked","onSelected","getArr","document","getElementById","split","_id","toDelete","debug","findIndex","name","LoginButton","useAuth0","loginWithPopup","isLoading","getIdTokenClaims","a","routes","private","route","Boolean","location","hostname","match","ReactDOM","domain","clientId","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8e9ffb28.chunk.js","sourcesContent":["const serverURL = \"https://aliang-personal-db.herokuapp.com/\";\r\n\r\nmodule.exports = { serverURL };","module.exports = __webpack_public_path__ + \"static/media/pfp.91014688.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Resume.5479861b.pdf\";","module.exports = __webpack_public_path__ + \"static/media/AV.f9b69ed3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bg.1921d1c6.jpg\";","import { EventEmitter } from \"events\";\r\nimport { serverURL } from '../constants';\r\n\r\nclass Controller extends EventEmitter {\r\n    constructor(){\r\n        super();\r\n\r\n        // Array of hobby JSONs as returned by get\r\n        /**\r\n         * @type {Array<CardDocument>}\r\n         */\r\n        this.hobbies = [];\r\n\r\n        // Array of experience JSONs as returned by get\r\n        /**\r\n         * @type {Array<CardDocument>}\r\n         */\r\n        this.exp = [];\r\n\r\n        this.token = \"\";\r\n\r\n        // Array of project JSONs as returned by get\r\n        /**\r\n         * @type {Array<CardDocument>}\r\n         */\r\n        this.projects = [];\r\n\r\n        // Binding function calls\r\n        this.get    = this.get.bind(this);\r\n        this.create = this.create.bind(this);\r\n        this.update = this.update.bind(this);\r\n        this.delete = this.delete.bind(this);\r\n        this.init   = this.init.bind(this);\r\n    }\r\n\r\n    /**\r\n     * Gets all docs from the database referenced by type\r\n     * @param {string} type \r\n     */\r\n    async get(type) {\r\n        try {\r\n            const res = await fetch(`${serverURL}${type}/read`, {\r\n                method: \"GET\"\r\n            });\r\n            const json = await res.json();\r\n            switch(type) {\r\n                case \"project\":\r\n                    this.projects = json.docs;\r\n                    break;\r\n                case \"exp\":\r\n                    this.exp = json.docs;\r\n                    break;\r\n                case \"hobby\":\r\n                    this.hobbies = json.docs;\r\n                    break;\r\n                default: \r\n                    console.log(\"Mistake in get\");\r\n            }\r\n            return json.docs;\r\n        } catch (e) {\r\n            this.emit(\"Error\", `Uncaught error in reading ${type}`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Updates doc on the database referenced by type\r\n     * @param {string} type \r\n     * @param {JSON} doc \r\n     */\r\n    async update(type, doc) {\r\n        try {\r\n            const res = await fetch(`${serverURL}${type}/update`, {\r\n                method: \"PUT\",\r\n                headers: {\"Authorization\": `Bearer ${this.token}`, \"Content-Type\": \"application/json\"},\r\n                body: JSON.stringify(doc)\r\n            });\r\n            await this.get(type);\r\n            return res.status == 200;\r\n        } catch (e) {\r\n            this.emit(\"Error\", `Uncaught error in updating ${type}`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Deletes doc from the database referenced by type\r\n     * @param {string} type \r\n     * @param {JSON} doc \r\n     */\r\n    async delete(type, doc) {\r\n        try {\r\n            const res = await fetch(`${serverURL}${type}/delete`, {\r\n                method: \"DELETE\",\r\n                headers: {\"Authorization\": `Bearer ${this.token}`, \"Content-Type\": \"application/json\"},\r\n                body: JSON.stringify(doc)\r\n            });\r\n            await this.get(type);\r\n            return res.status == 200;\r\n\r\n        } catch (e) {\r\n            this.emit(\"Error\", `Uncaught error in deleting ${type}`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Adds doc to the database referenced by type\r\n     * @param {string} type \r\n     * @param {JSON} doc \r\n     */\r\n    async create(type, doc) {\r\n        try {\r\n            console.log(doc)\r\n            const res = await fetch(`${serverURL}${type}/create`, {\r\n                method: \"POST\",\r\n                headers: {\"Authorization\": `Bearer ${this.token}`, \"Content-Type\": \"application/json\"},\r\n                body: JSON.stringify(doc)\r\n            });\r\n            await this.get(type);\r\n            return res.status == 200;\r\n        } catch (e) {\r\n            this.emit(\"Error\", `Uncaught error in creating ${type}`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param { string } token JWT for backend protected endpoint calls\r\n     */\r\n    init(token) {\r\n        if(!token) {\r\n            alert('Failed to retrieve token. Perhaps you do not have authorization?');\r\n            return;\r\n        }\r\n        this.token = token.__raw;\r\n    }\r\n}\r\n\r\nexport default new Controller();","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport controller from \"../controller/controller\";\r\n\r\nconst PrivateRoute = ({ component: RouteComponent, ...rest }) => {\r\n\r\n    // TODO: Adapt this from Philanthropy Connect to work with Auth0\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={routeProps =>\r\n                controller.token ? (\r\n                    <RouteComponent {...routeProps} />\r\n                ) : (\r\n                    <Redirect to={`/login${(rest.path || !rest.path) === \"/\" ? \"\" : `?redirect=${encodeURIComponent(rest.path)}`}`} />\r\n                )\r\n            }\r\n        />\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport '../App.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst navbutton = withStyles({\r\n    root: {\r\n        height: '65px',\r\n        borderRadius: '10px',\r\n        padding: '0 15px 0 15px',\r\n        color:'white',\r\n        fontSize: '20px',\r\n        margin: '5px 8%',\r\n        '&:hover': {\r\n            background: 'rgb(17, 17, 17, 0.6)',\r\n        },\r\n    },\r\n      \r\n})(Button);\r\n\r\nexport class NavBar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            scrolled: false\r\n        };\r\n        \r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener(\"scroll\", this.checkScroll);\r\n    }\r\n\r\n    checkScroll = (event) => {\r\n        this.setState({ scrolled: window.pageYOffset > 30 });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div class={this.state.scrolled ? \"scrolled\" : \"fadeInHeader\"}>\r\n                <div class=\"tabs\">\r\n                    <Button component={NavLink}exact activeClassName=\"active\" className=\"tabButton\" to=\"/\"><p>Introduction</p></Button>\r\n                    <Button component={NavLink}activeClassName=\"active\" className=\"tabButton\" to=\"/profile\"><p>About Me!</p></Button>\r\n                    <Button component={NavLink}activeClassName=\"active\" className=\"tabButton\" to=\"/experience\"><p>Experience</p></Button>\r\n                    <Button component={NavLink}activeClassName=\"active\" className=\"tabButton\" to=\"/projects\"><p>My Projects</p></Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import Button from '@material-ui/core/Button';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nexport const ResButton = withStyles({\r\n    root: {\r\n        font: 'Roboto',\r\n        borderRadius: 10,\r\n        border: 0,\r\n        color: 'white',\r\n        height: 48,\r\n        padding: '0 8px',\r\n        background: 'rgba(34, 34, 34, 0.6)',\r\n        backdropFilter: 'blur(5px)',\r\n        '&:hover': {\r\n            background: \"#00bfff\",\r\n            transition: 'all 0.25s cubic-bezier(.17,.67,.83,.67)',\r\n        },\r\n    }\r\n})(Button);\r\n","import React, { Component } from 'react';\r\nimport { NavBar    } from '../components/navbar';\r\nimport '../App.css';\r\nimport { PFP, Resume } from '../assets';\r\nimport { ResButton } from '../components/resbutton';\r\nexport default class Introduction extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"introPage\">\r\n                <div className=\"header\"><NavBar/></div>\r\n                <div className=\"content\">\r\n                        <div class = \"bannerPad\"><h1 class = \"IntroBanner\">Hi, I'm Andrew Liang!</h1></div>\r\n                        <img class = \"PFP\" src={ PFP }></img>\r\n                        <p class = \"IntroBlurb\" >I'm a third-year Computer Science major (with a minor in Management Science) at UCSD. \r\n                            I'm currently looking for a software development internship. I've got experience in Python, \r\n                            Javascript, Java, C++, C, HTML, CSS, Node.JS, React, to name a few languages. I've also gained \r\n                            meaningful experience in dealing with containerization with Docker (learning Kubernetes as well), \r\n                            as well as RESTful API development (check out my Projects tab to learn more about how this \r\n                            website was implemented!). I'm looking to extend my understanding of software development continually\r\n                            with any company willing to provide me with avenues for growth.\r\n                        </p>\r\n                        <ResButton variant=\"contained\" href={Resume} target={\"_blank\"}>Check out my Resume!</ResButton>\r\n                </div>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport { ResButton } from './resbutton';\r\nimport '../App.css';\r\n\r\n/**\r\n * @extends { Component< { doc: CardDocument }>}\r\n */\r\nexport default class InfoCard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            expanded: false,\r\n            image: this.props.doc.image,\r\n            progress: (this.props.doc.work === \"In Progress\") ? \"statusIP\": (this.props.doc.work === \"Completed\") ? \"statusComp\" : \"statusPlanned\",\r\n        };\r\n    }\r\n\r\n    handleExpandClick = () => {\r\n        this.setState({expanded: !this.state.expanded});\r\n        this.forceUpdate();\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Card className=\"infoCard\">\r\n                <CardHeader\r\n                    title={this.props.doc.title}\r\n                    subheader={<div className=\"subhead\">\r\n                                    {this.props.doc.date && <h4>Project Timeframe: {this.props.doc.date}</h4>}\r\n                                    {this.props.doc.work && <h4 className={this.state.progress}>{this.props.doc.work}</h4>}\r\n                                </div>}\r\n                />\r\n                <CardMedia\r\n                    component=\"img\"\r\n                    className=\"infoCardMedia\"\r\n                    image={this.state.image}\r\n                />\r\n                <CardContent>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                    {this.props.doc.blurb}\r\n                    </Typography>\r\n                </CardContent>\r\n                <CardActions>\r\n                    \r\n                    <IconButton\r\n                    onClick={this.handleExpandClick}\r\n                    aria-expanded={this.state.expanded}\r\n                    aria-label=\"Show more\"\r\n                    >\r\n                    {this.state.expanded ? <ExpandLessIcon style={{ color: '#ffffff' }}/> : <ExpandMoreIcon style={{ color: '#ffffff' }}/> }\r\n                    </IconButton>\r\n                    {this.props.doc.link &&\r\n                    <ResButton \r\n                        variant=\"contained\"\r\n                        startIcon={ <GitHubIcon className=\"biolink\"/> }\r\n                        href={this.props.doc.link}\r\n                        target={\"_blank\"}\r\n                    >Source Code</ResButton>}\r\n                </CardActions>\r\n                <Collapse in={this.state.expanded} timeout=\"auto\" unmountOnExit>\r\n                    <CardContent>\r\n                        {this.props.doc.info.map(i => <div><Typography class=\"infopar\">{i}</Typography></div>)}\r\n                    </CardContent>\r\n                </Collapse>\r\n            </Card>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { NavBar } from '../components/navbar';\r\nimport Controller from '../controller/controller';\r\nimport InfoCard from '../components/card';\r\n\r\nexport default class Profile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.updateHobbies();\r\n    }\r\n\r\n    updateHobbies() {\r\n        Controller.get(\"hobby\").then(i=>{\r\n            this.hobbies = i;\r\n            this.forceUpdate();\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"profilePage\">\r\n                <div className=\"header\"><NavBar/></div>\r\n                <div className=\"content\">\r\n                    <h1>About Me</h1>\r\n                    <p class=\"sub\">Here's a little more about my interests and hobbies!</p>\r\n                    { this.hobbies && this.hobbies.map(i => <InfoCard doc={i}/>) }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport InfoCard from '../components/card';\r\nimport { NavBar } from '../components/navbar';\r\nimport Controller from '../controller/controller';\r\n\r\nexport default class Experience extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.exp = [];\r\n        this.updateExp();\r\n    }\r\n    \r\n    updateExp() {\r\n        Controller.get(\"experience\").then(i=>{\r\n            this.exp = i;\r\n            this.forceUpdate();\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"expPage\">\r\n                <div className=\"header\"><NavBar/></div>\r\n                <div className=\"content\">\r\n                    <h1>Work Experience</h1>\r\n                    <p class=\"sub\">Here's a little bit about any work I have done that I feel would be relevant in the workplace!</p>\r\n                    { this.exp && this.exp.map(i=><InfoCard doc={i}/>) }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport InfoCard from '../components/card';\r\nimport { NavBar } from '../components/navbar';\r\nimport Controller from '../controller/controller';\r\nimport Button from '@material-ui/core/Button';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport default class Projects extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.projs = [];\r\n        this.state = {loading: true};\r\n        this.updateProjs();\r\n    }\r\n\r\n    updateProjs() {\r\n        Controller.get(\"project\").then(i=>{\r\n            this.projs = i;\r\n            this.forceUpdate();\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"projectsPage\">\r\n                <div className=\"header\"><NavBar/></div>\r\n                <div className=\"content\">\r\n                    <h1>Side Project Archive</h1>\r\n                    <p class=\"sub\">Here's some information about a few side projects I've done along the way!</p>\r\n                    { this.projs && this.projs.map(i => <InfoCard doc={i}/>) }\r\n                </div>\r\n                <Button component={NavLink}className=\"management\" to=\"/manage\"></Button>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport '../App.css';\r\n\r\n\r\nexport class ASInput extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: this.props.value || \"\"\r\n        };\r\n        \r\n    }\r\n\r\n    onChange = (event) => {\r\n        this.setState({ value: event.target.value });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <textarea id={this.props.id} onChange={this.onChange}>{this.state.value}</textarea>\r\n        );\r\n    }\r\n}","// Admin page where I can submit new experiences or cards to be added to the website\r\nimport React, { Component } from 'react';\r\nimport { NavBar } from '../components/navbar';\r\nimport controller from '../controller/controller';\r\nimport { ASInput } from '../components/input';\r\n\r\n\r\nexport default class Manage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.doc = {};\r\n        controller.get(\"project\").then(()=>{\r\n            this.setState({arr: controller.projects});\r\n            this.forceUpdate();\r\n        });\r\n        controller.get(\"exp\").then();\r\n        controller.get(\"hobby\").then();\r\n        /**\r\n         * creating: whether we're making new doc\r\n         * editing: whether we're editing/deleting existing doc\r\n         * selected: which one we're editing (if any)\r\n         * type: is it hobby, project, or exp?\r\n         */\r\n        this.state = {\r\n            creating: true,\r\n            editing: false,\r\n            selected: \"\",\r\n            type: \"project\",\r\n            arr: controller.projects\r\n        }\r\n        this.onTypeChange = this.onTypeChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.createButtonClicked = this.createButtonClicked.bind(this);\r\n        this.editingButtonClicked = this.editingButtonClicked.bind(this);\r\n        this.onSelected = this.onSelected.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getArr();\r\n        this.forceUpdate();\r\n    }\r\n    \r\n    getArr() {\r\n        switch(this.state.type) {\r\n            case \"project\":\r\n                this.setState({arr: controller.projects});\r\n                break;\r\n            case \"exp\":\r\n                this.setState({arr: controller.exp});\r\n                break;\r\n            case \"hobby\":\r\n                this.setState({arr: controller.hobbies});\r\n                break;\r\n        }\r\n        return this.state.arr;\r\n    }\r\n\r\n    /**\r\n     * Check if creating, editing, deleting, as well as \r\n     * which one was selected, and call appropriate endpoint\r\n     */\r\n    onSubmit() {\r\n        const title = document.getElementById('title');\r\n        const date = document.getElementById('date');\r\n        const image = document.getElementById('image');\r\n        const link = document.getElementById('link');\r\n        const work = document.getElementById('work');\r\n        const blurb = document.getElementById('blurb');\r\n        const info = document.getElementById('info');\r\n\r\n        \r\n        this.doc.title = title.value;\r\n        if (date) this.doc.date = date.value;\r\n        if (image) this.doc.image = image.value;\r\n        if (link) this.doc.link = link.value;\r\n        if (work) this.doc.work = work.value;\r\n        this.doc.blurb = blurb.value;\r\n        this.doc.info = info.value.split('\\n');\r\n\r\n        if (this.state.editing && this.state.selected) {\r\n            this.doc._id = this.state.arr[this.state.selected]._id;\r\n            controller.update(this.state.type, this.doc).then(i=>console.log(\"Update: \", i));\r\n            // Update ref with new controller values if applicable\r\n            this.doc = {};\r\n            this.setState({ selected: null });\r\n            return\r\n        }\r\n        console.log(this.doc);\r\n        controller.create(this.state.type, this.doc).then(i=>console.log(\"Create: \", i));\r\n    }\r\n\r\n    createButtonClicked() {\r\n        this.setState({creating: true, editing: false, selected: null});\r\n    }\r\n\r\n    editingButtonClicked() {\r\n        this.setState({creating: false, editing: true});\r\n    }\r\n\r\n    onSelected(event) {\r\n        this.setState({selected: event.target.value});\r\n    }\r\n\r\n    onTypeChange(event) {\r\n        this.setState({type: event.target.value});\r\n        this.getArr();\r\n    }\r\n\r\n    delete() {\r\n        if (!this.state.selected)  return alert(\"Nothing selected\");\r\n        const toDelete = this.state.arr[this.state.selected];\r\n        controller.delete(this.state.type, toDelete).then(i=>console.debug(\"Delete: \", i));\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"expPage\">\r\n                <div className=\"header\"><NavBar/></div>\r\n                <div className=\"content\">\r\n                        <h1>Database Management Dashboard</h1>\r\n                        <button onClick = {this.createButtonClicked}>Create</button>\r\n                        <button onClick = {this.editingButtonClicked}>Edit</button>\r\n                        <select onChange = {this.onTypeChange} value={this.state.value}>\r\n                            <option value=\"project\">Project</option>\r\n                            <option value=\"experience\">Experience</option>\r\n                            <option value=\"hobby\">Hobby</option>\r\n                        </select>\r\n                        {\r\n                            this.state.editing && \r\n                            <select onChange={this.onSelected} value={this.state.selected}>\r\n                                {this.state.arr.map(i=> <option value={this.state.arr.findIndex(i)}>{i.title}</option>)}\r\n                            </select>\r\n                        }\r\n                        {this.state.type === \"project\" \r\n                        ? \r\n                        <form name=\"toDB\">\r\n                            <label>Title:</label><br/>\r\n                            <ASInput id=\"title\" value={this.state.selected ? this.state.arr[this.state.selected].title: \"\"}/><br/>\r\n                            <label>Date:</label><br/>\r\n                            <ASInput id=\"date\" value={this.state.selected ? this.state.arr[this.state.selected].date: \"\"}/><br/>\r\n                            <label>Image:</label><br/>\r\n                            <ASInput id=\"image\" value={this.state.selected ? this.state.arr[this.state.selected].image: \"\"}/><br/>\r\n                            <label>Link:</label><br/>\r\n                            <ASInput id=\"link\" value={this.state.selected ? this.state.arr[this.state.selected].link: \"\"}/><br/>\r\n                            <label>Work: (In Progress, Completed, Planned)</label><br/>\r\n                            <ASInput id=\"work\" value={this.state.selected ? this.state.arr[this.state.selected].work: \"\"}/><br/>\r\n                            <label>Blurb:</label><br/>\r\n                            <ASInput id=\"blurb\" value={this.state.selected ? this.state.arr[this.state.selected].blurb: \"\"}/><br/>\r\n                            <label>Info:</label><br/>\r\n                            <ASInput id=\"info\" value={this.state.selected ? this.state.arr[this.state.selected].info: \"\"} /><br/>\r\n                            \r\n                        </form>\r\n                        : this.state.type === \"experience\" \r\n                        ? \r\n                        <form name=\"toDB\">\r\n                            <label>Title:</label><br/>\r\n                            <ASInput id=\"title\" value={this.state.selected ? this.state.arr[this.state.selected].title: \"\"}/><br/>\r\n                            <label>Date:</label><br/>\r\n                            <ASInput id=\"date\" value={this.state.selected ? this.state.arr[this.state.selected].date: \"\"}/><br/>\r\n                            <label>Image:</label><br/>\r\n                            <ASInput id=\"image\" value={this.state.selected ? this.state.arr[this.state.selected].image: \"\"}/><br/>\r\n                            <label>Link:</label><br/>\r\n                            <ASInput id=\"link\" value={this.state.selected ? this.state.arr[this.state.selected].link: \"\"}/><br/>\r\n                            <label>Blurb:</label><br/>\r\n                            <ASInput id=\"blurb\" value={this.state.selected ? this.state.arr[this.state.selected].blurb: \"\"}/><br/>\r\n                            <label>Info:</label><br/>\r\n                            <ASInput id=\"info\" value={this.state.selected ? this.state.arr[this.state.selected].info: \"\"} /><br/>\r\n                        </form>\r\n                        :\r\n                        <form name=\"toDB\">\r\n                            <label>Title:</label><br/>\r\n                            <ASInput id=\"title\" value={this.state.selected ? this.state.arr[this.state.selected].title: \"\"}/><br/>\r\n                            <label>Image:</label><br/>\r\n                            <ASInput id=\"image\" value={this.state.selected ? this.state.arr[this.state.selected].image: \"\"}/><br/>\r\n                            <label>Blurb:</label><br/>\r\n                            <ASInput id=\"blurb\" value={this.state.selected ? this.state.arr[this.state.selected].blurb: \"\"}/><br/>\r\n                            <label>Info:</label><br/>\r\n                            <ASInput id=\"info\" value={this.state.selected ? this.state.arr[this.state.selected].info: \"\"} /><br/>\r\n                        </form>\r\n                        /*TODO: change this to render the correct form */} \r\n                        <button onClick={this.onSubmit}>Create</button>\r\n                        <button onClick={this.delete}>Delete selected on dropdown</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport controller from \"../controller/controller\";\r\n\r\n\r\n\r\nconst LoginButton = () => {\r\n  const { loginWithPopup, isLoading, getIdTokenClaims } = useAuth0();\r\n  return <button onClick={async () => loginWithPopup().then(()=> {\r\n    while(isLoading);\r\n    getIdTokenClaims().then(token=>controller.init(token));\r\n    \r\n  })}>Log In</button>;\r\n};\r\n\r\nexport default LoginButton;","import React from 'react';\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport PrivateRoute from './auth/privateroute';\r\nimport './App.css';\r\nimport Introduction from './routes/introduction';\r\nimport Profile from './routes/profile';\r\nimport Experience from './routes/experience';\r\nimport Projects from './routes/projects';\r\nimport Manage from './routes/manage';\r\nimport Login from './routes/login';\r\n\r\nconst routes = [\r\n    { path: \"/\",           Component: Introduction, private: false },\r\n    { path: \"/profile\",    Component: Profile     , private: false },\r\n    { path: \"/experience\", Component: Experience  , private: false },\r\n    { path: \"/projects\",   Component: Projects    , private: false },\r\n    { path: \"/login\",      Component: Login       , private: false },\r\n    { path: \"/manage\",     Component: Manage      , private: true  }\r\n]\r\n\r\nexport default () => {\r\n    return (\r\n        <Router>\r\n            <div className=\"App\">\r\n                <header className=\"App-header\">\r\n                    {\r\n                        routes.map(route => (route.private ?\r\n                            <PrivateRoute path={route.path} component={route.Component} /> :\r\n                            <Route exact path={route.path} component={route.Component} />))\r\n                    }\r\n                </header>\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\n","// Admin page where I can submit new experiences or cards to be added to the website\r\nimport React, { Component } from 'react';\r\nimport LoginButton from '../components/loginbutton';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport { NavBar } from '../components/navbar';\r\n\r\nexport default class Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"expPage\">\r\n                <div className=\"header\"><NavBar/></div>\r\n                <div className=\"content\">\r\n                    { <LoginButton/> }\r\n                    { <Button component={NavLink} to=\"/manage\"><p>Manage</p></Button> }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Auth0Provider } from \"@auth0/auth0-react\";\r\n\r\n\r\nReactDOM.render(\r\n    <Auth0Provider\r\n      domain=\"dev-j3ai5m4d.us.auth0.com\"\r\n      clientId=\"ms7HTvXoZF3Q1LKkSJmoO6apcNcJACSV\"\r\n    >\r\n      <App />\r\n    </Auth0Provider>,\r\n    document.getElementById(\"root\")\r\n  );\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}