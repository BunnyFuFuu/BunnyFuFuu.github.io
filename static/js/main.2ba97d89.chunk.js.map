{"version":3,"sources":["components/navbar.js","routes/introduction.js","routes/profile.js","routes/experience.js","controller/controller.js","App.js","routes/projects.js","serviceWorker.js","index.js"],"names":["NavBar","props","checkScroll","event","setState","scrolled","window","pageYOffset","state","addEventListener","this","class","exact","activeClassName","className","to","Component","Introduction","Profile","Experience","repos","getReposList","bind","fetch","method","headers","res","json","map","r","console","log","EventEmitter","routes","path","Controller","then","forceUpdate","route","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"wSAIaA,EAAb,kDACI,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAWVC,YAAc,SAACC,GACX,EAAKC,SAAS,CAAEC,SAAUC,OAAOC,YAAc,MAX/C,EAAKC,MAAQ,CACTH,UAAU,GAHC,EADvB,gEAUQC,OAAOG,iBAAiB,SAAUC,KAAKR,eAV/C,+BAkBQ,OACI,yBAAKS,MAAOD,KAAKF,MAAMH,SAAW,WAAa,gBAC3C,yBAAKM,MAAM,QACP,kBAAC,IAAD,CAASC,OAAK,EAACC,gBAAgB,SAASC,UAAU,YAAYC,GAAG,KAAI,4CACrE,kBAAC,IAAD,CAASF,gBAAgB,SAASC,UAAU,YAAYC,GAAG,YAAW,yCACtE,kBAAC,IAAD,CAASF,gBAAgB,SAASC,UAAU,YAAYC,GAAG,eAAc,0CACzE,kBAAC,IAAD,CAASF,gBAAgB,SAASC,UAAU,YAAYC,GAAG,aAAY,iDAxB3F,GAA4BC,aCDPC,E,kDACjB,WAAYhB,GAAQ,uCACVA,G,qDAIN,OACI,yBAAKa,UAAU,aACX,yBAAKA,UAAU,UAAS,kBAAC,EAAD,OACxB,yBAAKA,UAAU,WAEP,qvR,GAXkBE,aCArBE,E,kDACjB,WAAYjB,GAAQ,uCACVA,G,qDAIN,OACI,yBAAKa,UAAU,eACX,yBAAKA,UAAU,UAAS,kBAAC,EAAD,OACxB,yBAAKA,UAAU,WAEP,iD,GAXaE,aCAhBG,E,kDACjB,WAAYlB,GAAQ,uCACVA,G,qDAIN,OACI,yBAAKa,UAAU,WACX,yBAAKA,UAAU,UAAS,kBAAC,EAAD,OACxB,yBAAKA,UAAU,WAEP,oD,GAXgBE,a,iCCyBzB,M,kDAzBX,aAAc,IAAD,8BACT,gBAGKI,MAAQ,GAGb,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBAPX,E,6LAWSC,MAAM,gDAAiD,CACrEC,OAAQ,MACRC,QAAS,CACL,eAAgB,sB,cAHlBC,E,gBAMaA,EAAIC,O,OAAjBA,E,OACNjB,KAAKU,MAAQO,EAAKC,KAAI,SAAAC,GAAC,OAAIA,EAAC,QAC5BC,QAAQC,IAAIJ,G,iHApBKK,eCMnBC,EAAS,CACX,CAAEC,KAAM,IAAelB,UAAWC,GAClC,CAAEiB,KAAM,WAAelB,UAAWE,GAClC,CAAEgB,KAAM,cAAelB,UAAWG,GAClC,CAAEe,KAAM,YAAelB,U,kDCPvB,WAAYf,GAAQ,IAAD,6BACf,cAAMA,GACNkC,EAAWd,eAAee,MAAK,kBAAM,EAAKC,iBAF3B,E,qDAKf,OACI,yBAAKvB,UAAU,gBACX,yBAAKA,UAAU,UAAS,kBAAC,EAAD,OACxB,yBAAKA,UAAU,WAGPqB,EAAWf,MAAMQ,KAAI,SAAAC,GAAC,OAAI,2BAAIA,Y,GAZhBb,eDWvB,aACX,OACI,kBAAC,IAAD,KACI,yBAAKF,UAAU,OACX,4BAAQA,UAAU,cAEVmB,EAAOL,KAAI,SAAAU,GAAK,OAAI,kBAAC,IAAD,CAAO1B,OAAK,EAACsB,KAAMI,EAAMJ,KAAMK,UAAWD,EAAMtB,mBETxEwB,QACW,cAA7BlC,OAAOmC,SAASC,UAEe,UAA7BpC,OAAOmC,SAASC,UAEhBpC,OAAOmC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBf,MAAK,SAAAgB,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLzB,QAAQyB,MAAMA,EAAMC,c","file":"static/js/main.2ba97d89.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport '../App.css';\r\n\r\nexport class NavBar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            scrolled: false\r\n        };\r\n        \r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener(\"scroll\", this.checkScroll);\r\n    }\r\n\r\n    checkScroll = (event) => {\r\n        this.setState({ scrolled: window.pageYOffset > 30 });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div class={this.state.scrolled ? \"scrolled\" : \"fadeInHeader\"}>\r\n                <div class=\"tabs\">\r\n                    <NavLink exact activeClassName=\"active\" className=\"tabButton\" to=\"/\"><p>Introduction</p></NavLink>\r\n                    <NavLink activeClassName=\"active\" className=\"tabButton\" to=\"/profile\"><p>About Me!</p></NavLink>\r\n                    <NavLink activeClassName=\"active\" className=\"tabButton\" to=\"/experience\"><p>Experience</p></NavLink>\r\n                    <NavLink activeClassName=\"active\" className=\"tabButton\" to=\"/projects\"><p>My Projects</p></NavLink>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { NavBar    } from '../components/navbar';\r\n\r\nexport default class Introduction extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"introPage\">\r\n                <div className=\"header\"><NavBar/></div>\r\n                <div className=\"content\">\r\n                    {\r\n                        <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quibusdam ex labore hic officiis animi doloribus ipsum recusandae nihil voluptatum ea corporis consequuntur molestiae in repudiandae minima. Tenetur nobis autem minus natus odit deleniti sed ea harum quasi molestiae. Facere porro quaerat perferendis quo officiis ea rem distinctio ducimus exercitationem delectus sed commodi quia dolorem sequi id. Molestiae iusto earum fugiat doloribus labore eveniet architecto aliquid mollitia nobis natus dolorum cumque veniam exercitationem dolor ut quibusdam dolores. Perferendis reiciendis repellendus nesciunt nisi minus autem a non beatae iusto quaerat ad officiis pariatur necessitatibus numquam totam temporibus ullam delectus nulla quo magni! Earum impedit ullam unde molestiae repudiandae id odio obcaecati labore voluptatibus eaque totam velit vel eum aliquam porro eos explicabo repellendus numquam sit modi voluptas magni nostrum ducimus officiis ex animi quisquam corporis recusandae ut quasi aliquid accusantium ratione quia quas ipsum eius expedita adipisci reiciendis quod necessitatibus eligendi a nihil nobis aspernatur aperiam veniam! Illum iste doloribus voluptatem eum aperiam. Commodi repellendus facere officiis corporis assumenda quis unde placeat cupiditate ullam ex fugit vitae illo similique maxime fugiat accusantium corrupti blanditiis aperiam velit adipisci laudantium repellat consectetur atque modi ab. Accusamus iure ab nulla impedit sed esse rem animi. Praesentium eligendi quas nostrum tenetur quaerat maxime assumenda expedita reprehenderit perferendis cumque ex minus pariatur doloremque nulla magni hic cupiditate. Rerum numquam quaerat esse perspiciatis quisquam tempora eligendi cum possimus omnis harum deleniti iusto libero dignissimos nulla non quas qui tempore sequi sit nesciunt quod aut cumque inventore repellendus mollitia. Reprehenderit laboriosam vero nostrum nisi enim ad quos autem illum non iure rem impedit esse ea quasi obcaecati voluptatum recusandae dolor cumque maiores sed placeat! Rem iusto cumque eligendi omnis perferendis deserunt at odit sint animi nobis officia consectetur expedita quisquam veritatis qui cum ut hic quibusdam cupiditate labore quis fugit dicta itaque magnam distinctio aliquid sequi possimus eum nulla sunt praesentium inventore repellat impedit. Architecto reprehenderit dolorum accusamus magnam nisi asperiores voluptatum consectetur quas nihil repellendus porro officiis officia! Itaque voluptatem pariatur doloremque possimus expedita officia rerum neque eveniet quidem cupiditate laborum odit nemo fuga repellat enim qui dicta ad autem illo dolores excepturi quasi ea perspiciatis sequi quam. Natus accusamus magni iure nemo necessitatibus nam exercitationem. Sed omnis nostrum delectus accusantium distinctio vitae ipsa. Neque mollitia similique suscipit error necessitatibus cupiditate repudiandae tempora expedita. Fuga aliquid deserunt quis mollitia alias vel quae rem aut debitis eligendi eveniet esse blanditiis. Qui beatae cum magnam sint placeat omnis pariatur sequi nihil velit quae illo nesciunt perspiciatis molestiae ex adipisci sunt recusandae aliquid aliquam. Officiis sit ipsum dicta minus molestias ipsa aperiam provident sapiente doloribus ex unde illum consequuntur quidem incidunt tempore nulla accusantium dolorum fuga voluptatem quos repudiandae quaerat ab nihil deleniti facilis itaque cum autem mollitia blanditiis veritatis deserunt praesentium recusandae accusamus. Illum ut repellendus quasi numquam quas nulla dolor dolore fugiat nobis cumque molestias excepturi impedit accusantium laboriosam aspernatur omnis enim eum eius laborum tempore. Tenetur corporis nesciunt optio rerum voluptate. Vitae recusandae ipsum ducimus hic consequatur tenetur repellendus maxime totam voluptatum aliquam voluptates amet sequi sunt mollitia asperiores architecto inventore odit ex consectetur incidunt quod nemo dicta temporibus enim dolorem dolor voluptas voluptatem. Laboriosam consectetur optio eligendi debitis sequi similique earum quo explicabo praesentium vel sapiente eum autem dicta nesciunt cum! Esse nemo voluptatibus quod ducimus eveniet quaerat fugiat labore. Dignissimos reprehenderit saepe ipsam non sunt deleniti harum ipsa eum reiciendis necessitatibus quam cum distinctio! Laborum at atque odio. Totam aspernatur nobis a cupiditate est culpa repudiandae error corporis ullam explicabo aliquam eius nisi ipsam dolore sed atque magnam possimus accusantium voluptas voluptatum quae laboriosam earum ut sequi nesciunt voluptate animi repellat iusto facere inventore ducimus omnis ea dignissimos consequatur beatae qui dicta accusamus sint consectetur porro. Ex esse quam hic amet saepe a ad labore soluta consectetur blanditiis fuga earum aliquid veritatis? Doloremque itaque perferendis dolorem repellendus qui ratione nobis tempora harum sit eaque veritatis autem at amet debitis numquam aliquam ut saepe placeat impedit ipsum sint similique consequatur cupiditate blanditiis nemo quibusdam commodi sequi laborum perspiciatis facilis consectetur minus minima dignissimos molestiae culpa voluptas possimus. Nihil cum reiciendis quibusdam sit dicta commodi culpa numquam ex. Voluptates dolorum sapiente libero repellat. Molestiae aut a voluptatibus magni quae voluptatum nisi vitae maiores aperiam animi. Explicabo id animi neque nisi in assumenda harum perferendis mollitia optio culpa adipisci excepturi repellat eum minima distinctio nulla non. Labore impedit commodi nihil dolore quisquam dicta fugiat provident unde minus nisi. Quidem dolorum blanditiis vitae aspernatur illum id expedita cum natus placeat ex ipsa possimus labore accusamus sed minima dignissimos non quia quas aperiam explicabo itaque consectetur aliquam modi nostrum sit at tempora iste quisquam nihil quam! Quas similique nemo alias possimus odio nam nihil porro dolore placeat omnis illum quisquam expedita at itaque fugiat tempora ad odit eligendi vitae dolorum tempore ipsa maxime sed asperiores non nulla explicabo. Corporis quas dolorum velit accusantium ex rem placeat quae vitae ipsum illum! Ut alias similique possimus ex harum ab. Aperiam blanditiis itaque voluptatem inventore incidunt dolorem magni asperiores corrupti neque laboriosam. Odio obcaecati nulla modi repudiandae officia natus atque laboriosam ratione quibusdam necessitatibus suscipit voluptatem dolor nobis ab soluta! Maiores ratione iure ipsum quia voluptatem error incidunt? Expedita repudiandae eius praesentium reprehenderit fugit dolore eaque consequatur dolorem soluta inventore corporis qui quo sapiente cupiditate commodi ut veritatis fuga quidem ad nesciunt repellat nemo neque itaque a ea beatae similique maxime cumque sunt reiciendis? Accusantium provident in quibusdam facere deleniti quis molestiae non eius totam iusto. Veritatis id totam ut incidunt fuga obcaecati quam facilis nobis alias cum quasi deserunt placeat sapiente corrupti quidem. Dolorum excepturi cum necessitatibus vero aperiam fuga autem molestias quisquam quis earum eos sapiente molestiae dolor illo at dicta facilis labore repudiandae nihil odio impedit similique rerum quidem soluta quaerat itaque obcaecati? Autem laboriosam praesentium nemo nihil sit. Ipsam tempora officia quis praesentium voluptate est molestias officiis commodi velit ad alias cum voluptatibus inventore dolores repellendus sapiente asperiores pariatur sit quo itaque animi expedita dolor fugit deleniti sequi. Quas quod doloribus voluptate magni suscipit facere rerum ipsa aut rem mollitia! Ut quidem nostrum nulla ipsum est magnam nemo iste sint ab reprehenderit. Dignissimos animi veniam aspernatur quia voluptatibus consequuntur doloremque fuga cumque eveniet similique deleniti tempora velit? Ipsa beatae vitae illo laboriosam quo provident corrupti ad dolorum cum magnam illum officia aperiam repellendus culpa iure quaerat incidunt sint quae aspernatur consectetur error odit animi aliquid doloremque at deleniti itaque aut quam facere cupiditate sapiente repellat hic nam saepe perferendis corporis reiciendis. Sint dicta reprehenderit sapiente deleniti esse in a nam quidem numquam! Ipsam nihil eum quam similique enim voluptas fuga suscipit aut voluptatum illum necessitatibus placeat animi quas sed sit incidunt neque molestiae aliquam omnis commodi repellendus eligendi harum non beatae veritatis aspernatur minus iusto fugiat saepe tenetur ad accusantium tempora provident quasi voluptatibus asperiores labore? Suscipit magnam iure eos animi sint pariatur. Maiores labore voluptates repellendus commodi possimus ratione voluptatem quae asperiores modi consequatur sint ad beatae id ex dicta cupiditate expedita delectus molestiae! Nulla eveniet dolores odit culpa dolore maxime reiciendis commodi porro laboriosam quia assumenda temporibus amet dolorem debitis vitae quos ullam velit recusandae suscipit delectus incidunt ea eaque placeat. Cum at doloremque magnam a esse molestiae!</p>\r\n                    }\r\n                </div>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { NavBar } from '../components/navbar';\r\n\r\nexport default class Profile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"profilePage\">\r\n                <div className=\"header\"><NavBar/></div>\r\n                <div className=\"content\">\r\n                    {\r\n                        <p>Profile page</p>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { NavBar } from '../components/navbar';\r\n\r\nexport default class Experience extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"expPage\">\r\n                <div className=\"header\"><NavBar/></div>\r\n                <div className=\"content\">\r\n                    {\r\n                        <p>Experience page</p>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import { EventEmitter } from \"events\";\r\n\r\nclass Controller extends EventEmitter {\r\n    constructor(){\r\n        super();\r\n\r\n        // Repositories fetched from Github\r\n        this.repos = [];\r\n\r\n        // Binding function calls\r\n        this.getReposList = this.getReposList.bind(this);\r\n    }\r\n\r\n    async getReposList() {\r\n        const res = await fetch(`https://api.github.com/users/BunnyFuFuu/repos`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        });\r\n        const json = await res.json();\r\n        this.repos = json.map(r => r[\"name\"]);\r\n        console.log(json);\r\n    }\r\n    \r\n}\r\n//https://api.github.com/repos/BunnyFuFuu/Personal-Website/contents/README.md\r\n\r\nexport default new Controller();","import React from 'react';\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport './App.css';\r\nimport Introduction from './routes/introduction';\r\nimport Profile from './routes/profile';\r\nimport Experience from './routes/experience';\r\nimport Projects from './routes/projects';\r\n\r\nconst routes = [\r\n    { path: \"/\",           Component: Introduction },\r\n    { path: \"/profile\",    Component: Profile      },\r\n    { path: \"/experience\", Component: Experience   },\r\n    { path: \"/projects\",   Component: Projects     }\r\n]\r\n\r\nexport default () => {\r\n    return (\r\n        <Router>\r\n            <div className=\"App\">\r\n                <header className=\"App-header\">\r\n                    {\r\n                        routes.map(route => <Route exact path={route.path} component={route.Component}/>)\r\n                    }\r\n                </header>\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\n","import React, { Component } from 'react';\r\nimport { NavBar } from '../components/navbar';\r\nimport Controller from '../controller/controller';\r\n\r\nexport default class Projects extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        Controller.getReposList().then(() => this.forceUpdate());\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"projectsPage\">\r\n                <div className=\"header\"><NavBar/></div>\r\n                <div className=\"content\">\r\n                    {\r\n                        /*<p>Projects page!</p>*/\r\n                        Controller.repos.map(r => <p>{r}</p>)\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}